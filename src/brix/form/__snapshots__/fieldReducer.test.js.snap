// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`insertField 1`] = `
Immutable.Map {
  "field-name": Immutable.Map {
    "initial": Immutable.Map {
      "value": "",
    },
    "current": Immutable.Map {
      "value": "",
      "pristine": true,
      "touched": false,
      "error": false,
      "helperText": "",
    },
  },
  "otherField": Immutable.Map {
    "initial": Immutable.Map {
      "value": "",
    },
    "current": Immutable.Map {
      "value": "",
      "pristine": true,
      "touched": false,
      "error": false,
      "helperText": "",
    },
  },
  "newField": Immutable.Map {
    "initial": Immutable.Map {
      "value": "one",
    },
    "current": Immutable.Map {
      "value": "one",
    },
  },
}
`;

exports[`pristine is false if value not equal to initial 1`] = `
Immutable.Map {
  "field-name": Immutable.Map {
    "initial": Immutable.Map {
      "value": "",
    },
    "current": Immutable.Map {
      "value": "new value",
      "pristine": false,
      "touched": false,
      "error": false,
      "helperText": "",
    },
  },
  "otherField": Immutable.Map {
    "initial": Immutable.Map {
      "value": "",
    },
    "current": Immutable.Map {
      "value": "",
      "pristine": true,
      "touched": false,
      "error": false,
      "helperText": "",
    },
  },
}
`;

exports[`pristine is true if value equal to initial 1`] = `
Immutable.Map {
  "field-name": Immutable.Map {
    "initial": Immutable.Map {
      "value": "",
    },
    "current": Immutable.Map {
      "value": "",
      "pristine": true,
      "touched": false,
      "error": false,
      "helperText": "",
    },
  },
  "otherField": Immutable.Map {
    "initial": Immutable.Map {
      "value": "",
    },
    "current": Immutable.Map {
      "value": "",
      "pristine": true,
      "touched": false,
      "error": false,
      "helperText": "",
    },
  },
}
`;

exports[`removeField 1`] = `
Immutable.Map {
  "otherField": Immutable.Map {
    "initial": Immutable.Map {
      "value": "",
    },
    "current": Immutable.Map {
      "value": "",
      "pristine": true,
      "touched": false,
      "error": false,
      "helperText": "",
    },
  },
}
`;

exports[`touched set on current field 1`] = `
Immutable.Map {
  "field-name": Immutable.Map {
    "initial": Immutable.Map {
      "value": "",
    },
    "current": Immutable.Map {
      "value": "",
      "pristine": true,
      "touched": true,
      "error": false,
      "helperText": "",
    },
  },
  "otherField": Immutable.Map {
    "initial": Immutable.Map {
      "value": "",
    },
    "current": Immutable.Map {
      "value": "",
      "pristine": true,
      "touched": false,
      "error": false,
      "helperText": "",
    },
  },
}
`;

exports[`updateValue for field updates value on current 1`] = `
Immutable.Map {
  "field-name": Immutable.Map {
    "initial": Immutable.Map {
      "value": "",
    },
    "current": Immutable.Map {
      "value": "new value",
      "pristine": false,
      "touched": false,
      "error": false,
      "helperText": "",
    },
  },
  "otherField": Immutable.Map {
    "initial": Immutable.Map {
      "value": "",
    },
    "current": Immutable.Map {
      "value": "",
      "pristine": true,
      "touched": false,
      "error": false,
      "helperText": "",
    },
  },
}
`;

exports[`validationResult set on current field 1`] = `
Immutable.Map {
  "field-name": Immutable.Map {
    "initial": Immutable.Map {
      "value": "",
    },
    "current": Immutable.Map {
      "value": "",
      "pristine": true,
      "touched": false,
      "error": true,
      "helperText": "i am error",
    },
  },
  "otherField": Immutable.Map {
    "initial": Immutable.Map {
      "value": "",
    },
    "current": Immutable.Map {
      "value": "",
      "pristine": true,
      "touched": false,
      "error": false,
      "helperText": "",
    },
  },
}
`;
