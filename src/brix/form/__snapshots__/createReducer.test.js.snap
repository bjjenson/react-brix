// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`adds helperText from field config 1`] = `
Array [
  [Function],
  Immutable.Map {
    "first": Immutable.Map {
      "initial": Immutable.Map {
        "type": "text",
        "value": "firstValue",
        "optional": false,
        "label": "First",
        "field": Object {
          "helperText": "i am helper",
          "label": "First",
          "name": "first",
        },
      },
      "current": Immutable.Map {
        "helperText": "i am helper",
        "error": false,
        "pristine": true,
        "touched": false,
        "value": "firstValue",
      },
    },
    "second": Immutable.Map {
      "initial": Immutable.Map {
        "type": "boolean",
        "value": "secondValue",
        "optional": false,
        "label": "Second",
        "field": Object {
          "label": "Second",
          "name": "second",
          "type": "boolean",
        },
      },
      "current": Immutable.Map {
        "helperText": "",
        "error": false,
        "pristine": true,
        "touched": false,
        "value": "secondValue",
      },
    },
  },
  [Function],
]
`;

exports[`initialValues boolean 1`] = `
Array [
  [Function],
  Immutable.Map {
    "first": Immutable.Map {
      "initial": Immutable.Map {
        "type": "boolean",
        "value": false,
        "optional": false,
        "label": undefined,
        "field": Object {
          "name": "first",
          "type": "boolean",
        },
      },
      "current": Immutable.Map {
        "helperText": "",
        "error": false,
        "pristine": true,
        "touched": false,
        "value": false,
      },
    },
  },
  [Function],
]
`;

exports[`initialValues field.value should used if set 1`] = `
Array [
  [Function],
  Immutable.Map {
    "first": Immutable.Map {
      "initial": Immutable.Map {
        "type": "text",
        "value": "i am field value",
        "optional": false,
        "label": undefined,
        "field": Object {
          "name": "first",
          "type": "text",
          "value": "i am field value",
        },
      },
      "current": Immutable.Map {
        "helperText": "",
        "error": false,
        "pristine": true,
        "touched": false,
        "value": "i am field value",
      },
    },
  },
  [Function],
]
`;

exports[`initialValues number 1`] = `
Array [
  [Function],
  Immutable.Map {
    "first": Immutable.Map {
      "initial": Immutable.Map {
        "type": "number",
        "value": 0,
        "optional": false,
        "label": undefined,
        "field": Object {
          "name": "first",
          "type": "number",
        },
      },
      "current": Immutable.Map {
        "helperText": "",
        "error": false,
        "pristine": true,
        "touched": false,
        "value": 0,
      },
    },
  },
  [Function],
]
`;

exports[`initialValues select 1`] = `
Array [
  [Function],
  Immutable.Map {
    "first": Immutable.Map {
      "initial": Immutable.Map {
        "type": "select",
        "value": "",
        "optional": false,
        "label": undefined,
        "field": Object {
          "name": "first",
          "type": "select",
        },
      },
      "current": Immutable.Map {
        "helperText": "",
        "error": false,
        "pristine": true,
        "touched": false,
        "value": "",
      },
    },
  },
  [Function],
]
`;

exports[`initialValues text 1`] = `
Array [
  [Function],
  Immutable.Map {
    "first": Immutable.Map {
      "initial": Immutable.Map {
        "type": "text",
        "value": "",
        "optional": false,
        "label": undefined,
        "field": Object {
          "name": "first",
          "type": "text",
        },
      },
      "current": Immutable.Map {
        "helperText": "",
        "error": false,
        "pristine": true,
        "touched": false,
        "value": "",
      },
    },
  },
  [Function],
]
`;

exports[`prepares initialState by field 1`] = `
Array [
  Immutable.Map {
    "first": Immutable.Map {
      "initial": Immutable.Map {
        "label": "First",
      },
    },
  },
  "dispatch",
]
`;

exports[`prepares initialState by field 2`] = `
Array [
  [Function],
  Immutable.Map {
    "first": Immutable.Map {
      "initial": Immutable.Map {
        "type": "text",
        "value": "firstValue",
        "optional": false,
        "label": "First",
        "field": Object {
          "label": "First",
          "name": "first",
        },
      },
      "current": Immutable.Map {
        "helperText": "",
        "error": false,
        "pristine": true,
        "touched": false,
        "value": "firstValue",
      },
    },
    "second": Immutable.Map {
      "initial": Immutable.Map {
        "type": "boolean",
        "value": "secondValue",
        "optional": false,
        "label": "Second",
        "field": Object {
          "label": "Second",
          "name": "second",
          "type": "boolean",
        },
      },
      "current": Immutable.Map {
        "helperText": "",
        "error": false,
        "pristine": true,
        "touched": false,
        "value": "secondValue",
      },
    },
  },
  [Function],
]
`;

exports[`sets optional on field 1`] = `
Array [
  [Function],
  Immutable.Map {
    "first": Immutable.Map {
      "initial": Immutable.Map {
        "type": "text",
        "value": "firstValue",
        "optional": true,
        "label": "First",
        "field": Object {
          "label": "First",
          "name": "first",
          "optional": true,
        },
      },
      "current": Immutable.Map {
        "helperText": "",
        "error": false,
        "pristine": true,
        "touched": false,
        "value": "firstValue",
      },
    },
    "second": Immutable.Map {
      "initial": Immutable.Map {
        "type": "boolean",
        "value": "secondValue",
        "optional": false,
        "label": "Second",
        "field": Object {
          "label": "Second",
          "name": "second",
          "type": "boolean",
        },
      },
      "current": Immutable.Map {
        "helperText": "",
        "error": false,
        "pristine": true,
        "touched": false,
        "value": "secondValue",
      },
    },
  },
  [Function],
]
`;

exports[`throws error if name not provided 1`] = `"name is required on field"`;

exports[`useMemo update dispatches reset 1`] = `
Array [
  Object {
    "payload": Immutable.Map {
      "first": Immutable.Map {
        "initial": Immutable.Map {
          "type": "text",
          "value": "firstValue",
          "optional": false,
          "label": "First",
          "field": Object {
            "label": "First",
            "name": "first",
          },
        },
        "current": Immutable.Map {
          "helperText": "",
          "error": false,
          "pristine": true,
          "touched": false,
          "value": "firstValue",
        },
      },
      "second": Immutable.Map {
        "initial": Immutable.Map {
          "type": "boolean",
          "value": "secondValue",
          "optional": false,
          "label": "Second",
          "field": Object {
            "label": "Second",
            "name": "second",
            "type": "boolean",
          },
        },
        "current": Immutable.Map {
          "helperText": "",
          "error": false,
          "pristine": true,
          "touched": false,
          "value": "secondValue",
        },
      },
    },
    "type": "reset",
  },
]
`;

exports[`uses memo to check for initialValues change 1`] = `
Array [
  [Function],
  Array [
    Immutable.Map {
      "first": "firstValue",
      "second": "secondValue",
    },
  ],
]
`;
